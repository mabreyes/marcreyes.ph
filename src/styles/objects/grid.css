/* ==========================================================================
   OBJECTS/GRID
   ========================================================================== */


/**
 * Slighty modified version of suitcss grid
 * https://github.com/suitcss/components-grid
 */


:root {
  --grid-gutter-size: var(--spacing-unit-large);

  --grid-gutter-size-large: var(--spacing-unit-large);
  --grid-gutter-size-huge: var(--spacing-unit-huge);
}


/**
  * Core grid component
  *
  * DO NOT apply dimension or offset utilities to the `Grid` element. All cell
  * widths and offsets should be applied to child grid cells.
  */

/* Grid container
    ========================================================================== */

/**
  * All content must be contained within child `Grid-cell` elements.
  *
  * 1. Account for browser defaults of elements that might be the root node of
  *    the component.
  */

.o-grid {
  box-sizing: border-box;
  display: flex; /* 1 */
  flex-flow: row wrap;
  margin: 0; /* 1 */
  padding: 0; /* 1 */
}

/**
  * Modifier: center align all grid cells
  */

.o-grid--alignCenter {
  justify-content: center;
}

/**
  * Modifier: right align all grid cells
  */

.o-grid--alignRight {
  justify-content: flex-end;
}

/**
  * Modifier: middle-align grid cells
  */

.o-grid--alignMiddle {
  align-items: center;
}

/**
  * Modifier: bottom-align grid cells
  */

.o-grid--alignBottom {
  align-items: flex-end;
}

/**
  * Modifier: allow cells to equal distribute width
  *
  * 1. Provide all values to avoid IE10 bug with shorthand flex
  *    http://git.io/vllC7
  *
  *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
  *    http://git.io/vllWx
  */

.o-grid--fit > .o-grid__cell {
  flex: 1 1 0%; /* 1 */
}

/**
  * Modifier: all cells match height of tallest cell in a row
  */

.o-grid--equalHeight > .o-grid__cell {
  display: flex;
}

/**
  * Modifier: gutters
  */

.o-grid--guttersLarge {
  margin: 0 calc(-0.5 * var(--grid-gutter-size-large)) calc(-1 * var(--grid-gutter-size-large));

  & > .o-grid__cell {
    margin-bottom: var(--grid-gutter-size-large);
    padding: 0 calc(0.5 * var(--grid-gutter-size-large));
  }
}

.o-grid--guttersHuge {
  margin: 0 calc(-0.5 * var(--grid-gutter-size-large)) calc(-1 * var(--grid-gutter-size-large));

  & > .o-grid__cell {
    margin-bottom: var(--grid-gutter-size-large);
    padding: 0 calc(0.5 * var(--grid-gutter-size-large));
  }

  @media (--mq-from-lg) {
    margin: 0 calc(-0.5 * var(--grid-gutter-size-huge)) calc(-1 * var(--grid-gutter-size-huge));
    
    & > .o-grid__cell {
      margin-bottom: var(--grid-gutter-size-huge);
      padding: 0 calc(0.5 * var(--grid-gutter-size-huge));
    }
  }
}


/* Grid cell
    ========================================================================== */

/**
  * No explicit width by default. Rely on combining `Grid-cell` with a dimension
  * utility or a component class that extends 'Grid'.
  *
  * 1. Set flex items to full width by default
  * 2. Fix issue where elements with overflow extend past the
  *    `Grid-cell` container - https://git.io/vw5oF
  */

.o-grid__cell {
  box-sizing: inherit;
  flex-basis: 100%; /* 1 */
  min-width: 0; /* 2 */
}

/**
  * Modifier: horizontally center one unit
  * Set a specific unit to be horizontally centered. Doesn't affect
  * any other units. Can still contain a child `Grid` object.
  */

.o-grid__cell--center {
  margin: 0 auto;
}